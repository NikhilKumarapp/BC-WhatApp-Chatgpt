name: Create Release

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      appVersion:
        description: 'App Version'
        required: true
      tag:
        description: 'Tag'
        required: false
      releaseNotes:
        description: 'Release Notes'
        required: false

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read version from App.json
        id: read_version
        run: |
          version=$(jq -r '.version' AppSource/**/App.json | head -n 1)
          echo "APP_VERSION=$version" >> $GITHUB_ENV

      - name: Set release inputs
        id: set_inputs
        run: |
          echo "APP_VERSION=${{ github.event.inputs.appVersion || env.APP_VERSION }}" >> $GITHUB_ENV
          if [[ -z "${{ github.event.inputs.tag }}" ]]; then
            echo "RELEASE_TAG=v${{ env.APP_VERSION }}-${{ github.run_number }}" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          fi
          echo "RELEASE_NOTES=${{ github.event.inputs.releaseNotes || 'Auto-generated release.' }}" >> $GITHUB_ENV

      - name: Delete existing tag (if any)
        run: |
          git push origin :refs/tags/${{ env.RELEASE_TAG }} || true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: Release ${{ env.APP_VERSION }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
